{"version":3,"sources":["components/welcome-page/welcome-page.jsx","components/result-page/result-page.jsx","components/select-page/select-page.jsx","components/app/app.jsx","serviceWorker.js","index.js"],"names":["WelcomePage","props","id","className","onClick","Result","state","page","this","setState","resultClirents","oldTyreDiameter","oldWidth","oldHeight","oldDiameter","toFixed","newTyreDiameter","newWidth","newHeight","newDiameter","tyreDiameterDif","oldWidthSM","newWidthSM","widthDif","oldCircum","newCircum","circumDif","oldCount","Math","pow","newCount","countDif","clearDif","abs","resultSpeed","resultSpeedErr","ob1","speedErr","resultMassage","colorBox","perc","border","backgroundColor","colspan","style","changePage","React","Component","SelectValuePage","arr","event","target","value","tags0","map","option1","key","tags1","tags2","tags3","tags4","tags5","widthDiff","heightDiff","diameterDiff","onChange","onOptionChange0","bind","onOptionChange1","onOptionChange2","onOptionChange3","onOptionChange4","onOptionChange5","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac06afe7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './welcome-page.css';\r\n\r\nexport function WelcomePage(props) {\r\n    return (\r\n      <div id='conteiner'>\r\n        <div className='header'>\r\n          <h1>Шинный калькулятор</h1>\r\n          <p>TyreCalculator.com</p>\r\n        </div>\r\n        \r\n        <button className='button' onClick={props.onClick}>Начать</button>\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport './result-page.css';\r\nimport { SelectValuePage } from '../select-page/select-page';\r\n\r\n\r\nexport class Result extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 'result',\r\n        };\r\n    }\r\n\r\n    changePage(page) {\r\n        this.setState({ page });\r\n    }\r\n\r\n    render() {\r\n\r\n        /*Geting Tyre Dimeter Difference*/\r\n\r\n        const oldTyreDiameter = (this.props.oldWidth * 2 * (this.props.oldHeight / 1000) + (this.props.oldDiameter * 2.54)).toFixed(1);\r\n        const newTyreDiameter = (this.props.newWidth * 2 * (this.props.newHeight / 1000) + (this.props.newDiameter * 2.54)).toFixed(1);\r\n        const tyreDiameterDif = (newTyreDiameter - oldTyreDiameter).toFixed(1);\r\n\r\n        /*Geting Tyre Width Difference*/\r\n\r\n        const oldWidthSM = this.props.oldWidth / 10;\r\n        const newWidthSM = this.props.newWidth / 10;\r\n        const widthDif = (newWidthSM - oldWidthSM).toFixed(1);\r\n\r\n        /*Geting Tyre Circumference Difference*/\r\n\r\n        const oldCircum = (oldTyreDiameter * 3.14).toFixed(1);\r\n        const newCircum = (newTyreDiameter * 3.14).toFixed(1);\r\n        const circumDif = (newTyreDiameter - oldTyreDiameter).toFixed(1);\r\n\r\n        /*Geting Wheel Turnover Count Difference*/\r\n\r\n        const oldCount = (Math.pow(10, 5) / oldCircum).toFixed(1);\r\n        const newCount = (Math.pow(10, 5) / newCircum).toFixed(1);\r\n        const countDif = (newCount - oldCount).toFixed(1);\r\n\r\n        /*Geting Vehicle Clearance Difference*/\r\n\r\n        const clearDif = ((newTyreDiameter - oldTyreDiameter) / 2).toFixed(1);\r\n        let resultClirents;\r\n\r\n        if (clearDif > 0) {\r\n            resultClirents = `Клиренс увеличится на ${Math.abs(clearDif)} см`;\r\n        }\r\n        else if (clearDif < 0) {\r\n            resultClirents = `Клиренс уменьшится на ${Math.abs(clearDif)} см`;\r\n        }\r\n        else {\r\n            resultClirents = `Клиренс не изменится`;\r\n        }\r\n\r\n        /*Calculate The Speedometer Error*/   \r\n\r\n        const ob1 = (Math.pow(90, 5) / oldCircum);\r\n        const ob2 = (Math.pow(90, 5) / newCircum);\r\n        const speedErr = (((ob2 - ob1) * 100) / ob1).toFixed(0);\r\n        let resultSpeed;\r\n        let resultSpeedErr;\r\n\r\n        if (speedErr > 0) {\r\n            resultSpeed = `Скорость спидометра увеличится на ${Math.abs(speedErr)}%`;\r\n            resultSpeedErr = (90 + (speedErr * 0.9)).toFixed(1);\r\n        }\r\n        else if (speedErr < 0) {\r\n            resultSpeed = `Скорость спидометра уменьшится на ${Math.abs(speedErr)}%`;\r\n            resultSpeedErr = (90 - (Math.abs(speedErr) * 0.9)).toFixed(1);\r\n        }\r\n        else {\r\n            resultSpeed = `Скорость спидометра не изменится`;\r\n            resultSpeedErr = 90;\r\n        }\r\n\r\n        /*Display result massage*/\r\n\r\n        const perc = Math.abs(tyreDiameterDif * 100) / newTyreDiameter;\r\n        let resultMassage;\r\n        let colorBox;\r\n        \r\n        if (perc > 0 && perc < 3) {\r\n            resultMassage = `Диаметр колеса отличается менее чем на 3%. Это безопасно.`;\r\n            colorBox = {\r\n                border: \"1px solid green\",\r\n                backgroundColor: \"rgba(0, 128, 0, 0.85)\"\r\n            };\r\n        }\r\n        else if (perc > 3) {\r\n            resultMassage = `Диаметр колеса отличается более чем на 3%. Это опасно!!!`;\r\n            colorBox = {\r\n                border: \"1px solid red\",\r\n                backgroundColor: \"rgba(255, 0, 0, 0.85)\"\r\n            };\r\n        }\r\n        else {\r\n            resultMassage = `Диаметр колеса не изменится`;\r\n        }\r\n\r\n        \r\n\r\n\r\n        if (this.state.page === 'result') {\r\n            return (\r\n                <div id='result-page'>\r\n                    <div className='curent-size'>\r\n                        <div className='curent-size-conteiner'>\r\n                            <p className='curent-size-title'>Новый размер</p>\r\n                            <div className='curent-size-item'>\r\n                                {this.props.newWidth}\r\n                            </div>\r\n                            &nbsp;/&nbsp;\r\n                            <div className='curent-size-item'>\r\n                                {this.props.newHeight}\r\n                            </div>\r\n                            &nbsp;R&nbsp;\r\n                            <div className='curent-size-item'>\r\n                                {this.props.newDiameter}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='result-conteiner'>\r\n                        <table className='result-table'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Показатель</th>\r\n                                    <th>Старый</th>\r\n                                    <th>Новый</th>\r\n                                    <th>Изменение</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Диаметр колеса</td>\r\n                                    <td>{oldTyreDiameter} см</td>\r\n                                    <td>{newTyreDiameter} см</td>\r\n                                    <td>{tyreDiameterDif} см</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Ширина колеса</td>\r\n                                    <td>{oldWidthSM} см</td>\r\n                                    <td>{newWidthSM} см</td>\r\n                                    <td>{widthDif} см</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Окружность</td>\r\n                                    <td>{oldCircum} см</td>\r\n                                    <td>{newCircum} см</td>\r\n                                    <td>{circumDif} см</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Оборотов на км</td>\r\n                                    <td>{oldCount} об</td>\r\n                                    <td>{newCount} об</td>\r\n                                    <td>{countDif} об</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Изменение клиренса</td>\r\n                                    <td colspan=\"3\">{resultClirents}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    \r\n                    <div className='result-footer'>\r\n                        <div className='result-speed'>\r\n                            <p>{resultSpeed}</p>\r\n                            <p>При реальной скорости 90 км/ч, спидометр будет показывать {resultSpeedErr} км/ч.</p>\r\n                        </div>\r\n                        <div className='result-massage' style={colorBox}>\r\n                            {resultMassage}\r\n                        </div>\r\n                        <button className='button button-result' onClick={() => this.changePage('select-value')}>Назад</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if (this.state.page === 'select-value') {\r\n            return (\r\n                <SelectValuePage />\r\n            );\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './select-page.css';\r\nimport { Result } from '../result-page/result-page';\r\n\r\nexport class SelectValuePage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      oldWidth: 145,\r\n      oldHeight: 25,\r\n      oldDiameter: 12,\r\n      newWidth: 145,\r\n      newHeight: 25,\r\n      newDiameter: 12\r\n    }\r\n    const arr = [\r\n      [145, 155, 165, 175, 185, 195, 205, 215, 225, 235, 245, 255, 265, 275, 285, 295, 305, 315, 325],\r\n      [25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85],\r\n      [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\r\n    ];\r\n    this.arr = arr;\r\n  }\r\n\r\n  onOptionChange0(event) {\r\n    this.setState({oldWidth: +event.target.value })\r\n  }\r\n\r\n  onOptionChange1(event) {\r\n    this.setState({oldHeight: +event.target.value })\r\n  }\r\n\r\n  onOptionChange2(event) {\r\n    this.setState({oldDiameter: +event.target.value })\r\n  }\r\n\r\n  onOptionChange3(event) {\r\n    this.setState({newWidth: +event.target.value })\r\n  }\r\n\r\n  onOptionChange4(event) {\r\n    this.setState({newHeight: +event.target.value })\r\n  }\r\n\r\n  onOptionChange5(event) {\r\n    this.setState({newDiameter: +event.target.value })\r\n  }\r\n\r\n  changePage(page) {\r\n    this.setState({ page });\r\n  }\r\n\r\n\r\n  render() {\r\n    const tags0 = this.arr[0].map(option1 => (\r\n      <option key={option1}\r\n        value={option1}>\r\n          {option1}\r\n      </option>\r\n    )\r\n    )\r\n    const tags1 = this.arr[1].map(option1 => (\r\n      <option key={option1}\r\n        value={option1}>\r\n          {option1}\r\n      </option>\r\n    )\r\n    )\r\n    const tags2 = this.arr[2].map(option1 => (\r\n      <option key={option1}\r\n        value={option1}>\r\n          {option1}\r\n      </option>\r\n    )\r\n    )\r\n\r\n    const tags3 = this.arr[0].map(option1 => (\r\n      <option key={option1}\r\n        value={option1}>\r\n          {option1}\r\n      </option>\r\n    )\r\n    )\r\n    const tags4 = this.arr[1].map(option1 => (\r\n      <option key={option1}\r\n        value={option1}>\r\n          {option1}\r\n      </option>\r\n    )\r\n    )\r\n    const tags5 = this.arr[2].map(option1 => (\r\n      <option key={option1}\r\n        value={option1}>\r\n          {option1}\r\n      </option>\r\n    )\r\n    )\r\n\r\n    if (this.state.page === 'select-value') {\r\n      return (\r\n        <SelectValuePage onClick={() => this.changePage('result')}/>\r\n      );\r\n    }\r\n    if (this.state.page === 'result') {\r\n      return (\r\n        <Result\r\n          {...this.state}\r\n        />\r\n      );\r\n    }\r\n\r\n    let widthDiff = this.state.newWidth - this.state.oldWidth;\r\n    if (widthDiff > 0) {\r\n      widthDiff = `+${widthDiff}`;\r\n    }\r\n    else {\r\n      widthDiff = `${widthDiff}`;\r\n    }\r\n\r\n    let heightDiff = this.state.newHeight - this.state.oldHeight;\r\n    if (heightDiff > 0) {\r\n      heightDiff = `+${heightDiff}`;\r\n    }\r\n    else {\r\n      heightDiff = `${heightDiff}`;\r\n    }\r\n\r\n    let diameterDiff = this.state.newDiameter - this.state.oldDiameter;\r\n    if (diameterDiff > 0) {\r\n      diameterDiff = `+${diameterDiff}`;\r\n    }\r\n    else {\r\n      diameterDiff = `${diameterDiff}`;\r\n    }\r\n\r\n    return (\r\n      <div id='select-page'>\r\n        <div className='select-value'>\r\n          <div className='old-size'>\r\n            <p className='title-select'>Текущий размер</p>\r\n            <div className='select-conteiner'>\r\n              <select className='select-item' value={this.props.value} onChange={this.onOptionChange0.bind(this)}>{tags0}</select>\r\n              &nbsp;/&nbsp;\r\n              <select className='select-item' value={this.props.value} onChange={this.onOptionChange1.bind(this)}>{tags1}</select>\r\n              &nbsp;R&nbsp;\r\n              <select className='select-item' value={this.props.value} onChange={this.onOptionChange2.bind(this)}>{tags2}</select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='new-size'>\r\n            <p className='title-select'>Новый размер</p>\r\n            <select className='select-item' value={this.props.value} onChange={this.onOptionChange3.bind(this)}>{tags3}</select>\r\n            &nbsp;/&nbsp;\r\n            <select className='select-item' value={this.props.value} onChange={this.onOptionChange4.bind(this)}>{tags4}</select>\r\n            &nbsp;R&nbsp;\r\n            <select className='select-item' value={this.props.value} onChange={this.onOptionChange5.bind(this)}>{tags5}</select>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <p className='header-select'>Изменение</p>\r\n        </div>\r\n\r\n        <div className='visual-value' >\r\n          \r\n          <div className='old-width'>\r\n            {this.state.oldWidth} мм\r\n          </div>\r\n\r\n          <div className='new-width'>\r\n            {this.state.newWidth} мм ({widthDiff})\r\n          </div>\r\n\r\n          <div className='old-height'>\r\n            {this.state.oldHeight} %\r\n          </div>\r\n\r\n          <div className='new-height'>\r\n            {this.state.newHeight} % ({heightDiff})\r\n          </div>\r\n\r\n          <div className='old-diameter'>\r\n            {this.state.oldDiameter} \"\r\n          </div>\r\n\r\n          <div className='new-diameter'>\r\n            {this.state.newDiameter} \" ({diameterDiff})\r\n          </div>\r\n\r\n        </div>\r\n        <button className='button button-select' onClick={() => this.changePage('result')}>Рассчитать</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './app.css';\r\nimport { WelcomePage } from '../welcome-page/welcome-page';\r\nimport { SelectValuePage } from '../select-page/select-page';\r\n\r\nexport class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      page: 'welcome',\r\n    };\r\n  }\r\n\r\n  changePage(page) {\r\n    this.setState({ page });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.page === 'welcome') {\r\n      return (\r\n        <WelcomePage onClick={() => this.changePage('select-value')} />\r\n      );\r\n    }\r\n    if (this.state.page === 'select-value') {\r\n      return (\r\n        <SelectValuePage />\r\n      );\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './components/app/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}